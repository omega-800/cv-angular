@use "src/scss/variables.scss" as variables;
@use "src/scss/screens.scss" as screens;
@use "src/scss/mixins.scss" as mixins;

.default-grid {
    display: grid;
    //column-gap: variables.$elem-padding;
    column-gap: variables.$thin * 2;
}

.flex-row {
    display: flex;

    flex: {
        direction: row;
        wrap: wrap;
    }

    align: {
        items: center;
        content: space-around;
    }

    justify-content: space-around;
}

.flex-row-just {
    display: flex;

    flex: {
        direction: row;
        wrap: wrap;
    }

    justify-content: space-evenly;
}

.flex-row-nojust {
    display: flex;

    flex: {
        direction: row;
        wrap: wrap;
    }
}

.flex-e2e {
    display: flex;

    flex: {
        direction: row;
        wrap: wrap;
    }

    align: {
        items: center;
        content: space-between;
    }

    justify-content: space-between;
}

.flex-column {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.flex-center {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.flex-list {
    display: flex;
    flex-direction: column;
    align-items: baseline;
    justify-content: center;
}

.flex-list-full {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.outlet {
    width: 100%;
}

.wrapper {
    display: flex;
    flex-direction: column;
    padding: variables.$wrapper-padding;
    scroll-behavior: smooth !important;

    @include screens.mobile-screen {
        $width: variables.$wrapper-width;
        //width: $width;
        width: 100%;
        padding: 0 calc((100vw - $width) / 2);
    }

    @include screens.tablet-screen {
        $width: calc(variables.$wrapper-width / 1.2);
        //width: $width;
        width: 100%;
        padding: 0 calc((100vw - $width) / 2);
    }

    @include screens.laptop-screen {
        $width: calc(variables.$wrapper-width / 1.3);
        //width: $width;
        width: 100%;
        padding: 0 calc((100vw - $width) / 2);
    }

    @include screens.desktop-screen {
        $width: calc(variables.$wrapper-width / 1.5);
        //width: $width;
        width: 100%;
        padding: 0 calc((100vw - $width) / 2);
    }

    @include screens.large-screen {
        $width: calc(variables.$wrapper-width / 1.7);
        //width: $width;
        width: 100%;
        padding: 0 calc((100vw - $width) / 2);
    }

    margin-bottom:30vh;
}

@mixin slimpill {
    margin: variables.$thin 0;
    color: variables.$fontcolor1;
    background-color: variables.$cool;
    border: none;
    border-top: variables.$defborderthin;
    //border-bottom: variables.$defborderthin;
}

@mixin pill {
    @include slimpill;
    display: inline-block;
    padding: calc(variables.$elem-padding / 2) variables.$elem-padding;
    border-radius: variables.$elem-size * 2;

    &,
    >* {
        font-family: variables.$mono;
    }
}

.slimpill {
    @include slimpill;
}

.pill {
    @include pill;
}

.buttonpill {
    @include pill;
    height: variables.$elem-height;
    padding: variables.$elem-padding;

    &>* {
        display: inline-block;
        vertical-align: middle;
        font-family: variables.$mono;
    }

    $size: calc(variables.$elem-height - (variables.$elem-padding * 2) - variables.$thin);

    & img {
        height: $size;
        width: $size;
        border-radius: variables.$border-radius-circle;
    }

    & :nth-child(2) {
        margin-left: variables.$elem-padding;
        width: calc(100% - (variables.$elem-padding * 2) - $size);
    }
}

.arrowImg {
    &.notactive {
        transform: rotate(180deg);
    }
}

.link {
    &:hover {
        @include mixins.darken-little(background-color);
        cursor: pointer;
    }
}

.preview-image {
    border-radius: variables.$border-radius-circle;
    height: variables.$elem-height;
    width: variables.$elem-height;
    padding: variables.$elem-padding;
}

.small-image {
    height: variables.$elem-size;
    width: variables.$elem-size;
    margin: auto variables.$elem-padding auto 0;
}