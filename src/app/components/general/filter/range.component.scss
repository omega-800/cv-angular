@use "src/scss/variables.scss" as variables;
@use "src/scss/mixins.scss" as mixins;

$range-width: 80%;
$range-height: variables.$elem-size;
$thumb-radius: calc(0.5 * $range-height);
$range-useful-width: calc(100% - $range-height);

@mixin track() {
    background: none;
    height: 100%;
    width: 100%;
}

@mixin thumb() {
    background: currentcolor;
    border: none;
    border-radius: 0;
    pointer-events: auto;
    width: $range-height;
    height: $range-height;
    border-radius: 50%;
}
    
@mixin range {
    .filterRange {
        display: grid;
        grid-template-areas: "img title"
                            "img range";
        grid-template-rows: auto auto;
        grid-template-columns: variables.$elem-size auto;
        margin: variables.$elem-padding;
        border-top: variables.$defborderthin;
        & .arrowImg {
            grid-area:img;
            @include mixins.small-image;
            transform: rotate(90deg);
        }
        & h5 {
            grid-area:title;
        }
        & .range {
            grid-area:range;
            @include mixins.flex-e2e;
            & output {
                width: calc((100% - $range-width) / 2);
                &:first-child{
                    text-align: left;
                }
                &:last-child{
                    text-align: right;
                }
            }
            & .wrap {
                display: grid;
                grid-template-rows: max-content $range-height;
                width: $range-width;
                grid-template-columns: 1fr;
                overflow: hidden;
                position: relative;
                background: linear-gradient(0deg, variables.$light2 $range-height, transparent 0);
                border-radius: $range-height;
                & .sr-only {
                    position: absolute;
                    clip-path: inset(50%);
                }

                & input[type="range"] {
                    grid-column: 1;
                    grid-row: 2;
                    z-index: variables.$top;
                    &::-webkit-slider-runnable-track,
                    &::-webkit-slider-thumb,
                    & {
                        -webkit-appearance: none;
                    }
                    background: none;
                    color: variables.$dark1;
                    font: inherit;
                    margin: 0;
                    pointer-events: none;

                    &::-webkit-slider-runnable-track {
                        @include track;
                    }
                    &::-moz-range-track {
                        @include track;
                    }
                    &::-webkit-slider-thumb {
                        @include thumb;
                    }
                    &::-moz-range-thumb {
                        @include thumb;
                    }
                }
                --dif: calc(var(--max) - var(--min));

                &::before,
                &::after {
                    grid-column: 1 / span 2;
                    grid-row: 2;
                    height: 1em;
                    background: variables.$cool;
                    content: "";
                }

                &::before {
                    margin-left: calc(
                        #{$thumb-radius} + (var(--a) - var(--min)) / var(--dif) *#{$range-useful-width}
                    );
                    width: calc((var(--b) - var(--a)) / var(--dif) *#{$range-useful-width});
                }

                &::after {
                    margin-left: calc(
                        #{$thumb-radius} + (var(--b) - var(--min)) / var(--dif) *#{$range-useful-width}
                    );
                    width: calc((var(--a) - var(--b)) / var(--dif) *#{$range-useful-width});
                }
            }
        }
    }
}