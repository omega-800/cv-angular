@import "src/scss/mixins.scss";
@import "src/scss/variables.scss";
@import "src/scss/screens.scss";

$range-width: 80%;
$range-height: $elem-size;
$thumb-radius: calc(0.5 * $range-height);
$range-useful-width: calc(100% - $range-height);

@mixin track() {
    background: none;
    height: 100%;
    width: 100%;
}

@mixin thumb() {
    background: currentcolor;
    border: none;
    border-radius: 0;
    pointer-events: auto;
    width: $range-height;
    height: $range-height;
    border-radius: 50%;
}

:host {
    & .filterSelectedContainer {
        overflow-x: auto;
        transform: rotateX(180deg);
        &::-webkit-scrollbar {
            height: $elem-padding;
        }
        & .filterSelected {
            width: 100%;
            transform: rotateX(180deg);
            display:flex;
            column-gap: $elem-padding;
            & .selectedItem {
                display: grid;
                grid-template-columns: max-content;
                grid-template-rows: max-content;
                @include slimpill;
                & > * {
                    display: inline-block;
                }
                &:hover{
                    cursor: pointer;
                }
            }
        }
    }
    & .filterComp {
        @include slimpill;
        padding: $elem-padding;
        & .filterTitle {
            width: 100%;
            @include flex-e2e;
        }
        & .filterItems {
            & .filterCategories,
            .filterRange {
                display: none;
            }
            &.active {
                & > .filterCategories {
                    @include flex-row-nojust;
                    & > div {
                        @include mobile-screen {
                            width: calc(50% - ($elem-padding * 2));
                        }
                        @include tablet-screen {
                            width: calc((100% / 3) - ($elem-padding * 2));
                        }
                        @include desktop-screen {
                            width: calc(25% - ($elem-padding * 2));
                        }
                        margin: $elem-padding;
                        cursor: pointer;
                        position: relative;
                        border-top: $defborderthin;
                        &.active {
                            & .tags {
                                position: absolute;
                                @include flex-list;
                                background-color: $cool;
                                width: 100%;
                                z-index: $above-top;
                                border-left: $defborderthin;
                                //border-right: $defborderthin;
                                & > .tag {
                                    & .tagIcon {
                                        @include small-image;
                                    }
                                    & > * {
                                        display: inline-block;
                                    }
                                    border-left: $defborderthin;
                                    margin-top: $elem-padding;
                                    margin-left: $thin;
                                    cursor: pointer;
                                    &.active {
                                        border-left: $defborder;
                                        &:hover {
                                            @include darken-little(border-color, $light2);
                                        }
                                    }
                                    &:hover {
                                        @include transition(border-left, $defborder);
                                    }
                                }
                            }
                        }
                        &:not(.active) {
                            & .tags {
                                display: none;
                            }
                        }
                    }
                }
                & .filterRange {
                    display: grid;
                    grid-template-areas: "img title"
                                        "img range";
                    grid-template-rows: auto auto;
                    grid-template-columns: $elem-size auto;
                    margin: $elem-padding;
                    border-top: $defborderthin;
                    & .arrowImg {
                        grid-area:img;
                        @include small-image;
                        transform: rotate(90deg);
                    }
                    & h5 {
                        grid-area:title;
                    }
                    & .range {
                        grid-area:range;
                        @include flex-e2e;
                        & output {
                            width: calc((100% - $range-width) / 2);
                            &:first-child{
                                text-align: left;
                            }
                            &:last-child{
                                text-align: right;
                            }
                        }
                        & .wrap {
                            display: grid;
                            grid-template-rows: max-content $range-height;
                            width: $range-width;
                            grid-template-columns: 1fr;
                            overflow: hidden;
                            position: relative;
                            background: linear-gradient(0deg, $light2 $range-height, transparent 0);
                            border-radius: $range-height;
                            & .sr-only {
                                position: absolute;
                                clip-path: inset(50%);
                            }

                            & input[type="range"] {
                                grid-column: 1;
                                grid-row: 2;
                                z-index: $top;
                                &::-webkit-slider-runnable-track,
                                &::-webkit-slider-thumb,
                                & {
                                    -webkit-appearance: none;
                                }
                                background: none;
                                color: $dark1;
                                font: inherit;
                                margin: 0;
                                pointer-events: none;

                                &::-webkit-slider-runnable-track {
                                    @include track;
                                }
                                &::-moz-range-track {
                                    @include track;
                                }
                                &::-webkit-slider-thumb {
                                    @include thumb;
                                }
                                &::-moz-range-thumb {
                                    @include thumb;
                                }
                            }
                            --dif: calc(var(--max) - var(--min));

                            &::before,
                            &::after {
                                grid-column: 1 / span 2;
                                grid-row: 2;
                                height: 1em;
                                background: $cool;
                                content: "";
                            }

                            &::before {
                                margin-left: calc(
                                    #{$thumb-radius} + (var(--a) - var(--min)) / var(--dif) *#{$range-useful-width}
                                );
                                width: calc((var(--b) - var(--a)) / var(--dif) *#{$range-useful-width});
                            }

                            &::after {
                                margin-left: calc(
                                    #{$thumb-radius} + (var(--b) - var(--min)) / var(--dif) *#{$range-useful-width}
                                );
                                width: calc((var(--a) - var(--b)) / var(--dif) *#{$range-useful-width});
                            }
                        }
                    }
                }
            }
        }
        & .showFilter {
            @include flex-row-nojust;
            cursor: pointer;
            & .arrowImg {
                @include small-image;
                &:not(.active) {
                    transform: rotate(180deg);
                }
            }
        }
        & .filterReset {
            @include link;
            @include slimpill;
        }
    }
}
