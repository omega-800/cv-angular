@use "src/scss/mixins.scss" as mixins;
@use "src/scss/variables.scss" as variables;
@use"src/scss/screens.scss" as screens;


:host {
    & .filterSelectedContainer {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        overflow-x: auto;
        transform: rotateX(180deg);

        &::-webkit-scrollbar {
            height: variables.$elem-padding;
        }

        & .filterSelected {
            width: 100%;
            transform: rotateX(180deg);
            display: flex;
            column-gap: variables.$elem-padding;

            & .selectedItem {
                white-space: nowrap;

                &>* {
                    display: inline-block;
                }
            }
        }
    }

    & .filterReset {
        position: absolute;
        top: 0;
        right: 0;
    }

    & .fullFilterComp {
        padding: variables.$elem-padding;

        & .filterTitle {
            width: 100%;

            &.subTitle {
                margin-top: variables.$elem-padding;
                //border-top: variables.$defborderthin;
                text-align: center;
            }
        }

        &.hover {
            @include mixins.darken-little(background-color);
        }

        & .showFilter {
            cursor: pointer;
        }

        & .filterComp .filterCategories {

            &>div,
            >app-select {
                @include screens.mobile-screen {
                    width: calc(100% - (variables.$elem-padding * 2));
                }

                @include screens.tablet-screen {
                    width: calc(100% - (variables.$elem-padding * 2));
                }

                @include screens.laptop-screen {
                    width: calc(50% - (variables.$elem-padding * 2));
                }

                @include screens.desktop-screen {
                    width: calc(50% - (variables.$elem-padding * 2));
                }

                @include screens.large-screen {
                    width: calc((100% / 3) - (variables.$elem-padding * 2));
                }

                margin: variables.$elem-padding;
                position: relative;
            }

            & app-range {
                flex-basis: 100%;
            }
        }

    }
}