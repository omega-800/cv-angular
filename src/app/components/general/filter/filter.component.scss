@use "src/scss/mixins.scss" as mixins;
@use "src/scss/variables.scss" as variables;
@use"src/scss/screens.scss" as screens;


:host {
    & .filterSelectedContainer {
        overflow-x: auto;
        transform: rotateX(180deg);

        &::-webkit-scrollbar {
            height: variables.$elem-padding;
        }

        & .filterSelected {
            width: 100%;
            transform: rotateX(180deg);
            display: flex;
            column-gap: variables.$elem-padding;

            & .selectedItem {
                white-space: nowrap;

                &>* {
                    display: inline-block;
                }
            }
        }
    }

    & .fullFilterComp {
        padding: variables.$elem-padding;

        & .filterTitle {
            width: 100%;

            &.subTitle {
                margin-top: variables.$elem-padding;
                //border-top: variables.$defborderthin;
                text-align: center;
            }
        }

        &.hover {
            @include mixins.darken-little(background-color);
        }

        & .showFilter {
            cursor: pointer;
        }

        & .filterComp .filterCategories {
            &>div {
                @include screens.mobile-screen {
                    width: calc(100% - (variables.$elem-padding * 2));
                }

                @include screens.tablet-screen {
                    width: calc(50% - (variables.$elem-padding * 2));
                }

                @include screens.laptop-screen {
                    width: calc(50% - (variables.$elem-padding * 2));
                }

                @include screens.desktop-screen {
                    width: calc((100% / 3) - (variables.$elem-padding * 2));
                }

                @include screens.large-screen {
                    width: calc((100% / 3) - (variables.$elem-padding * 2));
                }

                margin: variables.$elem-padding;
                cursor: pointer;
                position: relative;
                border-top: variables.$defborderthin;

                & .tags {
                    position: absolute;
                    background-color: variables.$cool;
                    width: 100%;
                    z-index: variables.$above-top;
                    border-left: variables.$defborderthin;

                    //border-right: variables.$defborderthin;
                    & .tag {

                        &>* {
                            display: inline-block;
                        }

                        border-left: variables.$defborderthin;
                        margin-top: variables.$elem-padding;
                        margin-left: variables.$thin;
                        cursor: pointer;

                        &.active {
                            border-left: variables.$defborder;

                            &:hover {
                                @include mixins.darken-little-custom(border-color, variables.$light2);
                            }
                        }

                        &:hover {
                            @include mixins.transition(border-left, variables.$defborder);
                        }
                    }
                }
            }

            &>.tag {
                cursor: pointer;

                &.active {
                    @include mixins.darken-little(background-color);

                    &:hover {
                        @include mixins.transition(background-color, variables.$cool);
                    }
                }
            }

            & app-range {
                flex-basis: 100%;
            }
        }

    }
}