@use "src/scss/variables.scss" as variables;
@use "src/scss/mixins.scss" as mixins;
@use "src/scss/screens.scss" as screens;

$img-width: 15rem;
$img-height-m: 60vh;
$img-height-t: 40vh;
$img-height-l: 50vh;
$img-height-d: 50vh;
$img-height-x: 50vh;

@mixin img-height($prop, $mod) {
    @include screens.mobile-screen {
        #{$prop}: calc($img-height-m + $mod);
    }

    @include screens.tablet-screen {
        #{$prop}: calc($img-height-t + $mod);
    }

    @include screens.laptop-screen {
        #{$prop}: calc($img-height-l + $mod);
    }

    @include screens.desktop-screen {
        #{$prop}: calc($img-height-d + $mod);
    }

    @include screens.large-screen {
        #{$prop}: calc($img-height-x + $mod);
    }
}

@mixin main-image-container {
    width: 100%;
    @include img-height(max-height, 0vh);
}

@mixin main-image {
    min-width: $img-width;
    min-height: $img-width;
    max-width: 100%;
    @include img-height(max-height, 0vh);
}

:host {
    @include main-image-container;
    //border-radius: variables.$elem-border-radius;
    overflow: hidden;
    position: relative;
    height: 100%;

    & .img-bg {
        overflow: hidden;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        //border-radius: variables.$elem-border-radius;
        z-index: variables.$below-bottom;

        &>div {
            width: 100%;
            height: 100%;
            background-size: cover;
            background-position: center;
            filter: blur(variables.$elem-size);
            -webkit-filter: blur(variables.$elem-size);
            z-index: variables.$below-bottom;
        }
    }

    & .img-container {
        z-index: variables.$bottom;
        position: relative;
        @include main-image;

        &:hover {
            cursor: pointer;
        }

        $img-height: var(--heightfull);
        $img-width: var(--widthfull);
        $img-margin-ver: calc((100% - var(--heightfull))/2);
        $img-margin-hor: calc((100% - var(--widthfull))/2);

        & .img-main {
            height: $img-height;
            width: $img-width;
            margin: $img-margin-ver $img-margin-hor;
        }

        &.zoomedIn {
            z-index: variables.$above-top;
            background-color: rgba(0, 0, 0, 0.5);
            position: fixed;
            height: 100vh;
            width: 100vw;
            max-height: 100vh;
            max-width: 100vw;
            top: 0;
            left: 0;
            z-index: variables.$top;

            & .img-main {
                height: calc($img-height * 0.8);
                width: calc($img-width * 0.8);
                margin: calc($img-margin-ver + ($img-height * 0.1)) calc($img-margin-hor + ($img-width * 0.1));
                position: fixed;
                top: 0;
                left: 0;
                z-index: variables.$highest;
            }

            & .zoomIcon {
                width: variables.$elem-height * 2;
                height: variables.$elem-height * 2;
                left: calc(50% - variables.$elem-height);
                top: calc(50% - variables.$elem-height);
                opacity: 0.8;
                position: fixed;
                margin: auto;
                z-index: variables.$evenhigher;
            }
        }
    }

    & .zoomIcon {
        position: absolute;
        width: variables.$elem-height;
        height: variables.$elem-height;
        top: calc(50% - (variables.$elem-height / 2));
        left: calc(50% - (variables.$elem-height / 2));
    }
}