@use "src/scss/mixins.scss" as mixins;
@use "src/scss/variables.scss" as variables;
@use "src/scss/screens.scss" as screens;

:host {
    @include mixins.wrapper;

    & .bot {
        width: 100%;
    }

    & .bottomLinks {
        @include mixins.default-grid;

        @include screens.mobile-screen {
            grid-template-columns: 1fr;
            grid-template-rows: auto auto auto;
            grid-template-areas:
                "contact"
                "address"
                "web";
        }

        @include screens.tablet-screen {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: auto auto;
            grid-template-areas:
                "contact  address"
                "web address";
        }

        @include screens.laptop-screen {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: auto auto;
            grid-template-areas:
                "contact  address"
                "web address";
        }

        @include screens.desktop-screen {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: auto auto;
            grid-template-areas:
                "contact  address"
                "web address";
        }

        @include screens.large-screen {
            grid-template-columns: 1fr 1fr 1fr;
            grid-template-rows: auto;
            grid-template-areas:
                "contact  address web";
        }

        &>div {
            @include mixins.slimpill;
            @include mixins.flex-list;
            flex: 1;

            & .contactButtons {
                @include mixins.flex-e2e;
            }

            align-self: flex-start;

            &>div {
                &>img {
                    @include mixins.small-image;
                }

                &>* {
                    display: inline-block;
                }
            }
        }

        & .contactPoints {
            grid-area: contact;
            padding: variables.$box-padding;
        }

        & .address {
            grid-area: address;
            padding: variables.$box-padding;

            & app-address {
                width: 100%;
            }
        }

        & .web {
            grid-area: web;
            padding: variables.$box-padding;

            & .content {
                border-top: variables.$defborderthin;
                width: 100%;
                @include mixins.flex-e2e;
            }
        }
    }

    & .skills {
        &:not(.active)>*:not(.showSkills) {
            display: none;
        }

        & .showSkills {
            @include mixins.slimpill;
            @include mixins.flex-row-nojust;
            cursor: pointer;

            & .arrowImg {
                @include mixins.small-image;

                &:not(.active) {
                    transform: rotate(180deg);
                }
            }
        }
    }
}