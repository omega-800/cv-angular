@use "src/scss/variables.scss" as variables;
@use "src/scss/screens.scss" as screens;
@use "src/scss/mixins.scss" as mixins;

:host {
    & h1 {
        order: -2;
    }

    & .ontop {
        order: -1;
    }

    & .bot {
        width: 100%;
    }

    & .time {
        width: 100%;
        padding: variables.$elem-padding;

        & table {
            margin: 0;
            width: 100%;
        }

        & .right {
            text-align: right;
        }

        & .hov {
            width: 100%;

            &>p {
                text-align: center;
                width: 100%;
            }
        }
    }

    & .bottomLinks {

        @include screens.mobile-screen {
            grid-template-columns: 1fr;
            grid-template-rows: auto auto auto auto;
            grid-template-areas:
                "info"
                "contact"
                "address"
                "web";
        }

        @include screens.tablet-screen {
            grid-template-columns: 1fr 1fr;
            grid-auto-rows: 1fr;
            grid-template-areas:
                "info web"
                "contact address";
        }

        @include screens.laptop-screen {
            grid-template-columns: 1fr 1fr;
            grid-auto-rows: 1fr;
            grid-template-areas:
                "info web"
                "contact address";
        }

        @include screens.desktop-screen {
            grid-template-columns: 1fr 1fr;
            grid-auto-rows: 1fr;
            grid-template-areas:
                "info web"
                "contact address";
        }

        @include screens.large-screen {
            grid-template-columns: 1fr 1fr 1fr 1fr;
            grid-template-rows: auto;
            grid-template-areas:
                "info contact address web";
        }

        &>div {
            flex: 1;
            align-self: flex-start;
            align-items: flex-start;
            justify-content: flex-start;
            padding: variables.$box-padding;
            height: calc(100% - variables.$thin);

            &>div>* {
                display: inline-block;
            }

        }

        & .info {
            grid-area: info;

            & .content {
                border-top: variables.$defborderthin;
                width: 100%;
            }
        }

        & .contactPoints {
            grid-area: contact;
        }

        & .address {
            grid-area: address;

            & app-address {
                width: 100%;
            }
        }

        & .web {
            grid-area: web;

            & .content {
                border-top: variables.$defborderthin;
                width: 100%;
            }
        }
    }

    & .projects {

        & .projectsList {
            padding: variables.$elem-padding;
            gap: variables.$elem-padding;

            & app-button {
                @include screens.mobile-screen {
                    flex-basis: calc(100%);
                }

                @include screens.tablet-screen {
                    flex-basis: calc(100%);
                }

                @include screens.laptop-screen {
                    flex-basis: calc(50% - (variables.$elem-padding / 2));
                }

                @include screens.desktop-screen {
                    flex-basis: calc(50% - (variables.$elem-padding / 2));
                }

                @include screens.large-screen {
                    flex-basis: calc((100% - (4 * variables.$elem-padding)) / 3);
                }
            }
        }

        & .showProjects {
            padding: variables.$elem-padding;
            margin-top: variables.$thin * 2;
        }
    }

    & .skills {
        & .showSkills {
            padding: variables.$elem-padding;
            margin-top: variables.$thin * 2;
        }
    }
}